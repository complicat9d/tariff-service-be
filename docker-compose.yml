version: "3.8"
services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 api/main.py
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./postgres_db:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
    ports:
      - "5432:5432"
    networks:
      - app-network

  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    command: alembic upgrade head
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: [ "CMD", "nc", "-z", "kafka", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
